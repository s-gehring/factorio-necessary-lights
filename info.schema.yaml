$schema: "http://json-schema.org/draft-04/schema#"
type: "object"
properties:
  name:
    type: "string"
    description: >-
      The internal name of mod. The game accepts anything as a mod name, however the mod portal 
      restricts mod names to only consist of alphanumeric characters, dashes and underscores. 
      Note that the mod folder or mod zip file name has to contain the mod name, where the 
      restrictions of the file system apply.

      The game accepts mod names with a maximum length of 100 characters. The mod portal only 
      accepts mods with names that are longer than 3 characters and shorter than 50 characters.
    minLength: 4
    maxLength: 50
    pattern: "^[a-zA-Z0-9_-]*$"
  version:
    type: "string"
    pattern: "^[0-9]{1,5}\.[0-9]{1,5}\.[0-9]{1,5}$"
    description: >-
      Defines the version of the mod in the format "number.number.number" for "main.major.minor", 
      for example "0.6.4". Each number can range from 0 to 65535.
    format: "semantic-version"
  title:
    type: "string"
    description: >-
      The display name of the mod, so it is not recommended to use someUgly_pRoGrAmMeR-name here. 
      Can be overwritten with a locale entry in the mod-name category, using the internal mod 
      name as the key.

      The game will reject a title field that is longer than 100 characters. However, this can be 
      worked around by using the locale entry. The mod portal does not restrict mod title length.
    maxLength: 100
  author:
    oneOf:
    - type: "string"
    - type: "array"
      items:
        type: "string"
    description: >-
      The author of the mod. This field does not have restrictions, it can also be a list of 
      authors etc. The mod portal ignores this field, it will simply display the uploader's name 
      as the author.
  contact:
    type: "string"
    description: >-
      How the mod author can be contacted, for example an email address.
  homepage:
    type: "string"
    description: >-
      Where the mod can be found on the internet. Note that the in-game mod browser shows the mod 
      portal link additionally to this field. Please don't put "None" here, it makes the field on 
      the mod portal website look ugly. Just leave the field empty if the mod doesn't have a 
      website/forum thread/discord.

  factorio_version:
    type: "string"
    default: "0.12"
    description: >-
      The major Factorio version that this mod supports. This can only be one version, not 
      multiple. While the field is optional, usually mods are developed for major versions higher 
      than the default 0.12, so the field has to be added anyway. Adding a minor version, e.g. 
      "0.18.27" will make the mod portal reject the mod and the game act weirdly. That means this 
      shouldn't be done; use only main and major version "main.major", for example "1.0". Mods 
      with the factorio_version "0.18" can also be loaded in 1.0 and the mod portal will return 
      them when queried for factorio_version 1.0 mods.

  dependencies:
    type: "array"
    items:
      $ref: "#/$defs/dependency"
    default: [ "base" ]
    description: >-
      Mods that this mod depends on or is incompatible with. If this mod depends on another, the 
      other mod will load first, see Data-Lifecycle. An empty array allows get around the default 
      and have no dependencies at all.
  description:
    type: "string"
    description: >-
      A short description of what your mod does. This is all that people get to see in-game. Can 
      be overwritten with a locale entry in the mod-description category, using the internal mod 
      name as the key.

required:
  - name
  - version
  - title
  - author

$defs:
  dependency:
    type: "string"
    description: >-
      Each dependency is a string that consists of up to three parts: 
      "<prefix> internal-mod-name <equality-operator version>", for example "? 
      some-mod-everyone-loves >= 4.2.0". The possible prefixes are: ! for incompatibility, ? for 
      an optional dependency, (?) for a hidden optional dependency, ~ for a dependency that does 
      not affect load order, or no prefix for a hard requirement for the other mod. The equality 
      operator (<, <=, =, >= or >) combined with the version allows to define dependencies that 
      require certain mod versions, but it is not required. Incompatibility does not support 
      versions, if you use incompatibility you are incompatible with the entire mod.
  
